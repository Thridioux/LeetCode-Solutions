class Solution:
    def rangeSum(self, nums, n, left, right):
        n  = len(nums) # lets take nums = [1,2,3,4] and n=4
        prefix = [0] * (n + 1) # prefix sum array of size n+1 = [0,0,0,0,0]
        for i in range(n):
            prefix[i + 1] = prefix[i] + nums[i] # prefix sum array = [0,1,3,6,10]
        subarray = []
        for i in range(n): # i = 0,1,2,3
            for j in range(i + 1, n + 1): # j = 1,2,3,4
                subarray.append(prefix[j] - prefix[i]) # subarray = [1,3,6,10,2,5,9,3,7,4]
        subarray.sort() # subarray = [1,2,3,3,4,5,6,7,9,10]
        return sum(subarray[left - 1:right]) % (10 ** 9 + 7)
    
# Time complexity: O(n^2logn)
# Space complexity: O(n)


#test the solution
nums = [1,2,3,4]
n = 4
left = 1
right = 10
sol = Solution()
print(sol.rangeSum(nums, n, left, right)) #13
